@startuml
hide empty members

package builtins {
  interface builtins.INamed {
    name: String
  }
}

class Concept #LightGreen extends Classifier {
  abstract: Boolean
  partition: Boolean
}

class ConceptInterface #LightGreen extends Classifier

class Containment #LightBlue extends Link

abstract class DataType #LightPink extends LanguageEntity

class Enumeration #LightPink extends DataType

class EnumerationLiteral #LightPink implements IKeyed

abstract class Feature #LightBlue implements IKeyed {
  optional: Boolean
}

abstract class Classifier #LightGreen extends LanguageEntity

abstract class Link #LightBlue extends Feature {
  multiple: Boolean
}

class Language <<partition>> implements IKeyed {
  version: Integer
}

abstract class LanguageEntity implements IKeyed

interface IKeyed extends builtins.INamed {
  key: Id
}

class PrimitiveType #LightPink extends DataType

class Property #LightBlue extends Feature

class Reference #LightBlue extends Link

' relations:

Concept "*" -> "0..1" Concept: extends
Concept "*" --> "*" ConceptInterface: implements

ConceptInterface "*" --> "*" ConceptInterface: extends

EnumerationLiteral "*" -* "1" Enumeration : literals

Feature "*" -* "1" Classifier: features

Link "*" --> "1" Classifier: type

Language "*" --> "*" Language: dependsOn
LanguageEntity "*" -* "1" Language: entities

Property "*" -> "1" DataType: type

legend
  <#LightGray,#LightGray>| <#LightBlue>Feature |
  | <#LightGreen>Classifier |
  | <#LightPink>DataType |
end legend
@enduml
