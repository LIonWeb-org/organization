classDiagram

class Concept{
    Boolean abstract
}
FeaturesContainer <|-- Concept

class ConceptInterface
FeaturesContainer <|-- ConceptInterface

class Containment
Link <|-- Containment

class DataType
<<abstract>> DataType
LanguageElement <|-- DataType

class Enumeration
DataType <|-- Enumeration
NamespaceProvider <|.. Enumeration

class EnumerationLiteral
NamespacedEntity <|-- EnumerationLiteral

class Feature {
    Boolean optional
}
<<abstract>> Feature
NamespacedEntity <|-- Feature

class FeaturesContainer {
    allFeatures() List~Feature~
}
<<abstract>> FeaturesContainer
LanguageElement <|-- FeaturesContainer
NamespaceProvider <|.. FeaturesContainer

class Link {
    Boolean multiple
}
<<abstract>> Link
Feature <|-- Link

class Language {
    String name
    Id key
    Integer version
}
NamespaceProvider <|.. Language

class LanguageElement
<<abstract>> LanguageElement
NamespacedEntity <|-- LanguageElement

class NamespacedEntity {
    String name
    Id key
}
<<abstract>> NamespacedEntity

class NamespaceProvider {
    namespaceQualifier() String
}
<<interface>> NamespaceProvider

class PrimitiveType
DataType <|-- PrimitiveType

class Property
Feature <|-- Property

class Reference
Link <|-- Reference


%% relations:

Concept "*" --> "0..1" Concept: extends
Concept "*" --> "*" ConceptInterface: implements

ConceptInterface "*" --> "*" ConceptInterface: extends

EnumerationLiteral "*" --* "1" Enumeration : literals

Feature "*" --* "1" FeaturesContainer: features

Link "*" --> "1" FeaturesContainer: type

Language "*" --> "*" Language: dependsOn
LanguageElement "*" --* "1" Language: elements

Property "*" --> "1" DataType: type
