@startuml

' classes

class Metamodel {
  qualifiedName: String
}

class Concept extends AbstractConcept {
  abstract: boolean
}

class ConceptInterface extends AbstractConcept

class Enum extends PrimitiveType 

class Datatype extends PrimitiveType

class Annotation extends MetamodelElement  {
  platformSpecific: String?
}

class Containment extends Link

class Reference extends Link

class EnumLiteral 

class Property extends Feature

' Abstract classes

abstract class MetamodelElement 

abstract class AbstractConcept extends MetamodelElement  {
  allFeatures(): List<Feature>
}

abstract class PrimitiveType extends MetamodelElement

abstract class Feature  {
  multiplicity: Multiplicity
}

abstract class Link extends Feature {
  type: AbstractConcept
}


' Relations

Metamodel "1" o-- "*" MetamodelElement: elements
Metamodel "*" -- "*" Metamodel: dependsOn

Concept "0..1" -- "*" Concept: extends
Concept "*" -- "*" ConceptInterface: implements

ConceptInterface "*" -- "*" ConceptInterface: extends

Enum "1" o-- "1..*" EnumLiteral: literals

Annotation "*" -- "1" AbstractConcept: target

Containment "1" -- "*" Containment: specializes

Reference "1" -- "*" Reference: specializes

Property "*" -- "1" PrimitiveType: type

Link "*" -- "1" AbstractConcept: type

@enduml