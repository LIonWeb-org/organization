@startuml


' (concrete) classes

class Annotation extends AbstractConcept implements NamespaceProvider, FeaturesContainer {
  platformSpecific: String?
}

class Concept extends AbstractConcept {
  abstract: boolean
}

class ConceptInterface extends AbstractConcept

class Containment extends Link

class Metamodel implements NamespaceProvider {
  qualifiedName: String
}

class PrimitiveType extends Datatype

class Property extends Feature

class Reference extends Link

class Typedef extends Datatype


' abstract classes

abstract class AbstractConcept extends MetamodelElement implements FeaturesContainer, NamespaceProvider {
  allFeatures(): List<Feature>
}

abstract class Datatype extends MetamodelElement

abstract class Feature implements NamespacedEntity {
  multiplicity: Multiplicity
  calculated: boolean
}

abstract class Link extends Feature

abstract class MetamodelElement implements NamespacedEntity


' interfaces

interface FeaturesContainer

interface NamespaceProvider {
   namespaceQualifier(): String
}

interface NamespacedEntity {
  simpleName: String
  qualifiedName(): String
}


' enums

enum Multiplicity {
  Optional
  Single
  ZeroOrMore
  OneOrMore
}


' relations

Annotation "*" -- "1" AbstractConcept: target

Concept "0..1" -- "*" Concept: extends
Concept "*" -- "*" ConceptInterface: implements

ConceptInterface "*" -- "*" ConceptInterface: extends

Containment "1" -- "*" Containment: specializes

FeaturesContainer "1" o-- "*" Feature: features

Link "*" -- "1" AbstractConcept: type

Metamodel "1" o-- "*" MetamodelElement: elements
Metamodel "*" -- "*" Metamodel: dependsOn

NamespacedEntity "*" -- "1" NamespaceProvider: container

Property "*" -- "1" Datatype: type

Reference "1" -- "*" Reference: specializes

Typedef "*" -- "1" PrimitiveType: constraints


@enduml
