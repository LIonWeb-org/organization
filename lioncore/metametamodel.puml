@startuml
hide empty members

interface NamespacedEntity {
  simpleName: String
  qualifiedName(): String
}

interface NamespaceProvider {
  namespaceQualifier(): String
}

class Metamodel implements NamespaceProvider {
  qualifiedName: String
}

abstract class MetamodelElement implements NamespacedEntity

abstract class FeaturesContainer extends MetamodelElement implements NamespaceProvider {
  allFeatures(): List<Feature>
}

class Annotation #orange extends FeaturesContainer  {
  platformSpecific: String?
}

class Concept extends FeaturesContainer {
  abstract: boolean
}

class ConceptInterface extends FeaturesContainer

abstract class Feature implements NamespacedEntity {
  <color:#orange>derived: boolean</color>
  optional: boolean
}

class Property extends Feature

class Typedef #orange extends DataType

abstract class DataType extends MetamodelElement

class PrimitiveType extends DataType

class Enumeration extends DataType implements NamespaceProvider

class EnumerationLiteral implements NamespacedEntity

abstract class Link extends Feature {
  multiple: boolean
}

class Containment extends Link

class Reference extends Link

' relations:

Annotation "*" --> "1" FeaturesContainer #orange;text:orange : target

Concept "*" -> "0..1" Concept: extends
Concept "*" --> "*" ConceptInterface: implements

ConceptInterface "*" --> "*" ConceptInterface: extends

Containment "*" -> "0..1" Containment #orange;text:orange : specializes

Feature "*" -* "1" FeaturesContainer: features

Link "*" --> "1" FeaturesContainer: type

MetamodelElement "*" -* "1" Metamodel: elements
Metamodel "*" --> "*" Metamodel: dependsOn

NamespacedEntity "*" --> "1" NamespaceProvider: container

Property "*" -> "1" DataType: type

Reference "*" -> "0..1" Reference #orange;text:orange : specializes

EnumerationLiteral "*" -* "1" Enumeration : literals

Typedef "*" -> "1" PrimitiveType #orange;text:orange : constraints

@enduml
