@startuml
hide empty members

class Concept #LightGreen extends FeaturesContainer {
  abstract: Boolean
}

class ConceptInterface #LightGreen extends FeaturesContainer

class Containment #LightBlue extends Link

abstract class DataType #LightPink extends MetamodelElement

class Enumeration #LightPink extends DataType implements NamespaceProvider

class EnumerationLiteral #LightPink implements NamespacedEntity

abstract class Feature #LightBlue implements NamespacedEntity {
  optional: Boolean
}

abstract class FeaturesContainer #LightGreen extends MetamodelElement implements NamespaceProvider {
  allFeatures(): List<Feature>
}

abstract class Link #LightBlue extends Feature {
  multiple: Boolean
}

class Metamodel implements NamespaceProvider {
  name: String
  key: Id
  version: Integer
}

abstract class MetamodelElement implements NamespacedEntity

abstract class NamespacedEntity {
  name: String
  key: Id
}

interface NamespaceProvider {
  namespaceQualifier(): String
}

class PrimitiveType #LightPink extends DataType

class Property #LightBlue extends Feature

class Reference #LightBlue extends Link

' relations:

Concept "*" -> "0..1" Concept: extends
Concept "*" --> "*" ConceptInterface: implements

ConceptInterface "*" --> "*" ConceptInterface: extends

EnumerationLiteral "*" -* "1" Enumeration : literals

Feature "*" -* "1" FeaturesContainer: features

Link "*" --> "1" FeaturesContainer: type

Metamodel "*" --> "*" Metamodel: dependsOn
MetamodelElement "*" -* "1" Metamodel: elements

Property "*" -> "1" DataType: type

legend
  <#LightGray,#LightGray>| <#LightBlue>Feature |
  | <#LightGreen>Feature Container |
  | <#LightPink>DataType |
end legend
@enduml
